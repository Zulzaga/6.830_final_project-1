package minidb;
import java.util.ArrayList;

import org.json.simple.*;
/**
 * This class is the one that called from the command line.
 * 
 * Usage:
 * javac **compile whatever needed**
 * java Tester <filename.json>
 * 
 * 
 * It takes in the file that specifies the test parameters.
 * 
 * filename.json contains a json object with following info:
 *  - table: table_name    //TODO: what if we want query multiple tables???
 *  - column: column_name  //TODO: one column per table, might be unnecessary
 *  - range: choose one from [<, >, <=, >=, <<, <=<, <<=, <=<=]
 *  - fixed_range: True/False
 *  - min_lower_range: None or int
 *  - max_upper_range : None or int
 *  - num_queries: positive int 
 * 
 * 
 * @author danamukusheva
 *
 */
public class Tester {

	public static void main(String[] args) {
		
		// Check if used correctly
		// TODO: add a hint
		if (args.length != 1){
			System.err.println("Invalid usage!!!");
			System.exit(0);
		}
		
		String filename = args[0];
		

	}
	
	/**
	 * This method parses the content of the file containing
	 * info about the test workload and creates a corresponding
	 * JSONObject.
	 * 
	 * @param filename String, contains correctly formatted json
	 * @return JSONObject from file content
	 */
	private JSONObject parseFile(String filename){
		return null;
		
	}
	/**
	 * This method creates workload using the parameters specified in
	 * the file
	 * 
	 * @param params JSONObject with parameters for workload (see first lines)
	 * @return array of Query objects
	 */
	private ArrayList<Query> generateWorkload(JSONObject params){
		return null;
	}

}
